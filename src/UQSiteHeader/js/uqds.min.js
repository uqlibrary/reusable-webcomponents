'use strict';
function _classCallCheck(e, t) {
    if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
}
function _defineProperties(e, t) {
    for (var n = 0; n < t.length; n++) {
        var s = t[n];
        (s.enumerable = s.enumerable || !1),
            (s.configurable = !0),
            'value' in s && (s.writable = !0),
            Object.defineProperty(e, s.key, s);
    }
}
function _createClass(e, t, n) {
    return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;
}
var uq = (function (e) {
    var t = (function () {
        function e(t, n) {
            _classCallCheck(this, e),
                (this.nav = t),
                (this.navClass = n),
                (this.toggleClass = 'jsNavToggle'),
                (this.openModifier = ''.concat(this.navClass, '__list--open')),
                (this.levelOpenModifier = ''.concat(this.navClass, '__list-item--open')),
                (this.level1Class = ''.concat(this.navClass, '__list--level-1')),
                (this.level2Class = ''.concat(this.navClass, '__list--level-2')),
                (this.reverseClass = ''.concat(this.navClass, '__list--reverse')),
                (this.subNavClass = ''.concat(this.navClass, '__list-item--has-subnav')),
                (this.subToggleClass = ''.concat(this.navClass, '__sub-toggle')),
                (this.init = this.init.bind(this)),
                (this.handleToggle = this.handleToggle.bind(this)),
                (this.handleMobileToggle = this.handleMobileToggle.bind(this)),
                (this.setOrientation = this.setOrientation.bind(this)),
                (this.handleKeyPress = this.handleKeyPress.bind(this)),
                this.init();
        }
        return (
            _createClass(e, [
                {
                    key: 'init',
                    value: function () {
                        var h = document.querySelector('uq-site-header');
                        var e = this,
                            t = !!h && h.shadowRoot.querySelector('.'.concat(this.toggleClass)),
                            n = this.nav.querySelectorAll('.'.concat(this.subNavClass)),
                            s = this.nav.querySelectorAll('.'.concat(this.subNavClass, ' > a')),
                            i = this.nav.querySelectorAll('.'.concat(this.level2Class, ' .').concat(this.subNavClass)),
                            a = this.nav.querySelectorAll(
                                '.'.concat(this.level2Class, ' .').concat(this.subNavClass, ' > a'),
                            ),
                            l = this.nav.querySelectorAll('li > a'),
                            o = this.nav.querySelectorAll('.'.concat(this.subToggleClass));
                        t.addEventListener('click', this.handleMobileToggle),
                            n.forEach(function (t) {
                                e.setOrientation(t),
                                    t.addEventListener('mouseenter', e.handleToggle),
                                    t.addEventListener('mouseleave', e.handleToggle);
                            }),
                            s.forEach(function (t) {
                                window.matchMedia('(min-width: 1024px)').matches &&
                                    t.addEventListener('touchend', e.handleToggle);
                            }),
                            i.forEach(function (t) {
                                e.setOrientation(t),
                                    t.addEventListener('mouseenter', e.handleToggle),
                                    t.addEventListener('mouseleave', e.handleToggle);
                            }),
                            a.forEach(function (t) {
                                t.addEventListener('touchend', e.handleToggle);
                            }),
                            l.forEach(function (t) {
                                t.addEventListener('keydown', e.handleKeyPress);
                            }),
                            o.forEach(function (t) {
                                t.addEventListener('click', e.handleToggle);
                            });
                    },
                },
                {
                    key: 'handleMobileToggle',
                    value: function (e) {
                        var t = this,
                            n = e.target,
                            s = this.nav.querySelectorAll('.'.concat(this.level1Class)),
                            i = n.hasAttribute('aria-expanded') && n.getAttribute('aria-expanded') === 'true';
                        n.classList.toggle('uq-site-header__navigation-toggle--close'),
                            n.setAttribute('aria-expanded', !i),
                            s.forEach(function (e) {
                                e.classList.toggle(t.openModifier), e.setAttribute('aria-expanded', !i);
                            });
                    },
                },
                {
                    key: 'handleToggle',
                    value: function (e) {
                        if (
                            ('mouseenter' !== e.type && 'mouseleave' !== e.type) ||
                            !window.matchMedia('(max-width: 1024px)').matches
                        ) {
                            var t = e.target;
                            'LI' !== t.tagName && (t = t.parentElement);
                            var n = t.querySelector('ul');
                            n.classList.contains(this.openModifier)
                                ? this.closeLevel(n, t)
                                : ('touchend' === e.type && e.preventDefault(),
                                  this.closeAllLevels(),
                                  this.openLevel(n, t));
                        }
                    },
                },
                {
                    key: 'openLevel',
                    value: function (e, t) {
                        e.classList.add(this.openModifier),
                            t.classList.add(this.levelOpenModifier),
                            t.querySelector('a').setAttribute('aria-expanded', 'true');
                    },
                },
                {
                    key: 'closeLevel',
                    value: function (e, t) {
                        e.classList.remove(this.openModifier),
                            this.setOrientation(t),
                            t.classList.remove(this.levelOpenModifier),
                            t.querySelector('a').setAttribute('aria-expanded', 'false');
                    },
                },
                {
                    key: 'closeAllLevels',
                    value: function () {
                        var e = this;
                        this.nav.querySelectorAll('.'.concat(this.subNavClass)).forEach(function (t) {
                            var n = t.querySelector('.'.concat(e.level2Class));
                            e.closeLevel(n, t);
                        });
                    },
                },
                {
                    key: 'setOrientation',
                    value: function (e) {
                        var t = e.querySelector('.'.concat(this.level2Class)),
                            n = this.reverseClass,
                            s = 0;
                        t && t.getBoundingClientRect() && (s = t.getBoundingClientRect().right),
                            window.innerWidth < s && t.classList.add(n);
                    },
                },
                {
                    key: 'handleKeyPress',
                    value: function (e) {
                        var t = e.currentTarget.parentNode,
                            n = t.parentNode;
                        switch (
                            (t === n.firstElementChild
                                ? 'Tab' === e.key && !0 === e.shiftKey && this.closeLevel(n, n.parentNode)
                                : t === n.lastElementChild &&
                                  'Tab' === e.key &&
                                  !1 === e.shiftKey &&
                                  this.closeLevel(n, n.parentNode),
                            e.keyCode)
                        ) {
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 40:
                                e.preventDefault(), this.handleToggle(e);
                        }
                    },
                },
            ]),
            e
        );
    })();
    var n,
        s,
        i =
            ((function (e) {
                var t, n, s, i, a;
                e.exports =
                    ((n = []),
                    (s = document),
                    (i = s.documentElement.doScroll),
                    (a = (i ? /^loaded|^c/ : /^loaded|^i|^c/).test(s.readyState)) ||
                        s.addEventListener(
                            'DOMContentLoaded',
                            (t = function () {
                                for (s.removeEventListener('DOMContentLoaded', t), a = 1; (t = n.shift()); ) t();
                            }),
                        ),
                    function (e) {
                        a ? setTimeout(e, 0) : n.push(e);
                    });
            })(
                (s = {
                    path: n,
                    exports: {},
                    require: function (e, t) {
                        return (function () {
                            throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
                        })(null == t && s.path);
                    },
                }),
                s.exports,
            ),
            s.exports),
        a = (function () {
            function e(t) {
                _classCallCheck(this, e), (t = t || 'accordion'), (this.className = t), this.init();
            }
            return (
                _createClass(
                    e,
                    [
                        {
                            key: 'slideContentUp',
                            value: function (t) {
                                var n = this,
                                    s = e.getNextSibling(t, '.'.concat(this.className, '__content'));
                                t.classList.remove(''.concat(this.className, '__toggle--active')),
                                    t.setAttribute('aria-expanded', 'false'),
                                    (s.style.height = '0px'),
                                    s.addEventListener(
                                        'transitionend',
                                        function () {
                                            s.classList.remove(''.concat(n.className, '__content--active'));
                                        },
                                        { once: !0 },
                                    ),
                                    s.setAttribute('aria-hidden', 'true');
                            },
                        },
                        {
                            key: 'slideContentDown',
                            value: function (t) {
                                var n = e.getNextSibling(t, '.'.concat(this.className, '__content'));
                                t.classList.add(''.concat(this.className, '__toggle--active')),
                                    t.setAttribute('aria-expanded', 'true'),
                                    n.classList.add(''.concat(this.className, '__content--active')),
                                    (n.style.height = 'auto');
                                var s = n.clientHeight + 'px';
                                (n.style.height = '0px'),
                                    setTimeout(function () {
                                        n.style.height = s;
                                    }, 0),
                                    n.setAttribute('aria-hidden', 'false');
                            },
                        },
                        {
                            key: 'slideUpOthers',
                            value: function (e, t) {
                                for (var n = 0; n < t.length; n++)
                                    t[n] !== e &&
                                        t[n].classList.contains(''.concat(this.className, '__toggle--active')) &&
                                        this.slideContentUp(t[n]);
                            },
                        },
                        {
                            key: 'handleToggle',
                            value: function (e) {
                                var t = this;
                                return function (n) {
                                    n.preventDefault(),
                                        n.target.classList.contains(''.concat(t.className, '__toggle--active'))
                                            ? t.slideContentUp(n.target)
                                            : (t.slideContentDown(n.target), t.slideUpOthers(n.target, e));
                                };
                            },
                        },
                        {
                            key: 'init',
                            value: function () {
                                var t = this;
                                i(function () {
                                    var h = document.querySelector('uq-header');
                                    if (
                                        (window.location.hash && (t.hash = window.location.hash),
                                        t.hash && '' !== t.hash)
                                    ) {
                                        var n =
                                            !!h &&
                                            h.shadowRoot.querySelector(
                                                ''.concat(t.hash, '.').concat(t.className, '__content'),
                                            );
                                        if (n) {
                                            var s = e.getPrevSibling(n, '.'.concat(t.className, '__toggle'));
                                            t.slideContentDown(s), window.scrollTo(0, s.getBoundingClientRect().top);
                                        }
                                    }
                                    !!h &&
                                        h.shadowRoot.querySelectorAll('.'.concat(t.className)).forEach(function (e) {
                                            var n = e.querySelectorAll('.'.concat(t.className, '__toggle'));
                                            n.forEach(function (e) {
                                                e.addEventListener('click', t.handleToggle(n));
                                            });
                                        });
                                });
                            },
                        },
                    ],
                    [
                        {
                            key: 'getNextSibling',
                            value: function (e, t) {
                                var n = e.nextElementSibling;
                                if (!t) return n;
                                for (; n; ) {
                                    if (n.matches(t)) return n;
                                    n = n.nextElementSibling;
                                }
                            },
                        },
                        {
                            key: 'getPrevSibling',
                            value: function (e, t) {
                                var n = e.previousElementSibling;
                                if (!t) return n;
                                for (; n; ) {
                                    if (n.matches(t)) return n;
                                    n = n.previousElementSibling;
                                }
                            },
                        },
                    ],
                ),
                e
            );
        })(),
        l = (function () {
            function e(t) {
                if ((t || (t = '.grid-menu--equalised'), !(this instanceof e))) return new e(t);
                var h = document.querySelector('uq-header');
                this.blocks = 'string' != typeof t ? t : !!h && h.shadowRoot.querySelectorAll(t);
            }
            return (
                (e.prototype.align = function () {
                    var e,
                        t = 0,
                        n = this.blocks.length;
                    for (e = 0; e < n; e++)
                        (this.blocks[e].style.minHeight = ''), (t = Math.max(t, this.blocks[e].clientHeight));
                    for (e = 0; e < n; e++) this.blocks[e].style.minHeight = t + 'px';
                }),
                e
            );
        })();
    return (e.accordion = a), (e.gridMenuEqualiser = l), (e.siteHeaderNavigation = t), e;
})({});
